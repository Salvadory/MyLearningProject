pipeline { 
    agent any
    environment {
        branch_name = "dev"
    }
    stages {
        stage('git') {
            steps {
                sh 'rm -r *'
                git branch: "${branch_name}", credentialsId: 'GitHub_SSH_key', url: 'git@github.com:Salvadory/MyLearningProject.git'
                sh 'pwd'
                sh 'ls -la'
            }
        }  
        stage('BUILD_and_DEPLOY') {
             steps { 
                  script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'DockerSSHkey', keyFileVariable: 'KeyFile', usernameVariable: 'userName')]) {
                    def remote = [:]
                    remote.allowAnyHosts = 'true'
                    remote.name = 'ubuntu'
                    remote.host = '192.168.0.190'
                    remote.user = userName
                    remote.identityFile  = KeyFile
                 //   remote.password = 'Password1'
                    
                    sshPut remote: remote, from: "${WORKSPACE}/Scripts", into: '/root/docker/'
                    sshCommand remote: remote, command: 'chmod 755 /root/docker/Scripts/Script.sh'
                    sshCommand remote: remote, failOnError: false, command: "/root/docker/Scripts/Script.sh"
                    sshPut remote: remote, from: "${WORKSPACE}/Dockerfiles", into: '/root/docker/'
                 //   sshPut remote: remote, from: "${WORKSPACE}" , filterRegex: /.html$/, into: '/root/docker/WebSite'
                    sshPut remote: remote, from: "${WORKSPACE}/Website" , into: '/root/docker'
                    sshCommand remote: remote, command: 'docker build /root/docker/Dockerfiles/. -t test1000'
                    sshCommand remote: remote, command: 'docker run --rm -d -p 80:80 -u root --name nginx_test -v /root/docker/Website/:/var/www/html:ro test1000'
                    sshCommand remote: remote, command: 'docker ps'
                    }
             }
         }
        } 
        stage('TEST') {
            steps { 
                sh 'curl 192.168.0.190:80'
            }
        }
    }
}
